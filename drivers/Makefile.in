# Network UPS Tools: drivers

# directories

prefix		= @prefix@
exec_prefix	= @exec_prefix@
DRVPATH 	= $(DESTDIR)@DRVPATH@

# other definitions
CC	= @CC@
CFLAGS	= -I../include @CFLAGS@
PROGS	= bestups fentonups apcsmart everups belkin masterguard powercom \
	  cyberpower tripplite victronups genericups mge-utalk bestuferrups \
	  isbmex etapro liebert sms esupssmart tripplitesu blazer safenet \
	  belkinunv oneac ippon cpsups mustek metasys bestfcom powermust \
	  bcmxcp upscode2 solis gamatronic
LDFLAGS = @LDFLAGS@
LIBDEP	= @LIBOBJ@
LIBOBJ	= $(LIBDEP) @NETLIBS@ @SERLIBS@

INSTALLCMD = @INSTALL@
INSTALLMODE = 0755

# DRIVER_BUILD_LIST is either "all-drivers" or a subset from configure time
DRIVER_BUILD_LIST = @DRIVER_BUILD_LIST@

SNMP_DRIVER_LIST = snmp-ups

NETSNMP_CFLAGS = @NETSNMP_CFLAGS@
NETSNMP_LIBS = @NETSNMP_LIBS@

USB_DRIVER_LIST = @USB_DRIVER_LIST@

LIBUSB_CFLAGS = @LIBUSB_CFLAGS@
LIBUSB_LIBS = @LIBUSB_LIBS@

all: @DRIVER_BUILD_LIST@ upsdrvctl dummycons

all-drivers: $(PROGS) mge-shut

build-usb: $(USB_DRIVER_LIST)

# ==========================================================================
# Driver build details
#
# The rules are regenerated during 'make depend' with gendb.

include Makefile.drvbuild

# ==========================================================================
# upsdrvctl: the new all-singing all-dancing driver control program

upsdrvctl: upsdrvctl.c ../common/upsconf.o ../common/parseconf.o $(LIBDEP)
	$(CC) $(CFLAGS) -o upsdrvctl upsdrvctl.c ../common/upsconf.o \
		../common/parseconf.o $(LIBOBJ) $(LDFLAGS)

# ==========================================================================
# Testing driver for doing things without real UPS hardware attached

dummycons: dummycons.c dstate.o ../common/state.o ../common/parseconf.o $(LIBDEP)
	$(CC) $(CFLAGS) -o $@ $@.c dstate.o ../common/state.o ../common/parseconf.o $(LIBOBJ) $(LDFLAGS)

# ==========================================================================
# Special cases: drivers which need Linux includes
#
# Not built by default.

hidups: hidups.o main.o dstate.o ../common/state.o \
		../common/upsconf.o \
		../common/parseconf.o $(LIBDEP)
	$(CC) $(CFLAGS) -o hidups hidups.o main.o dstate.o \
		../common/state.o ../common/upsconf.o ../common/parseconf.o \
		$(LIBOBJ) $(LDFLAGS)

hidups.o:
	$(CC) $(CFLAGS) -c hidups.c

energizerups: energizerups.o main.o dstate.o ../common/state.o \
		../common/upsconf.o \
		../common/parseconf.o $(LIBDEP)
	$(CC) $(CFLAGS) -o energizerups energizerups.o main.o dstate.o \
		../common/state.o ../common/upsconf.o ../common/parseconf.o \
		$(LIBOBJ) $(LDFLAGS)

energizerups.o:
	$(CC) $(CFLAGS) -c energizerups.c


# ==========================================================================
# Special case: newhidups driver - development version

newhidups: newhidups.o main.o dstate.o ../common/state.o \
		../common/upsconf.o ../common/parseconf.o $(LIBDEP) \
		$(STRLCPY) libhid.o libusb.o hidparser.o \
		mge-hid.o apc-hid.o belkin-hid.o
	$(CC) $(CFLAGS) $(LIBUSB_CFLAGS) -o $@ $@.o main.o dstate.o \
		../common/state.o ../common/upsconf.o ../common/parseconf.o \
		$(LIBOBJ) $(LIBUSB_LIBS) $(LDFLAGS) libhid.o libusb.o hidparser.o \
		mge-hid.o apc-hid.o belkin-hid.o

newhidups.o:
	$(CC) $(CFLAGS) $(LIBUSB_CFLAGS) -c newhidups.c

libhid.o:
	$(CC) $(CFLAGS) $(LIBUSB_CFLAGS) -o libhid.o -c libhid.c

libusb.o:
	$(CC) $(CFLAGS) $(LIBUSB_CFLAGS) -o libusb.o -c libusb.c

# ==========================================================================
# Special case: tripplite_usb driver - development version (early beta)

tripplite_usb: tripplite_usb.o main.o dstate.o ../common/state.o \
		../common/upsconf.o ../common/parseconf.o $(LIBDEP) \
		$(STRLCPY) libhid.o libusb.o hidparser.o
	$(CC) $(CFLAGS) $(LIBUSB_CFLAGS) -o $@ $@.o main.o dstate.o \
		../common/state.o ../common/upsconf.o ../common/parseconf.o \
		$(LIBOBJ) $(LIBUSB_LIBS) $(LDFLAGS) -lm libhid.o libusb.o hidparser.o

tripplite_usb.o: tripplite_usb.c libhid.h libusb.h
	$(CC) $(CFLAGS) $(LIBUSB_CFLAGS) -c tripplite_usb.c

# ==========================================================================
# Special case: bcmxcp_usb.c driver - development version (early beta)

bcmxcp_usb: bcmxcp.o bcmxcp_usb.o nut_usb.o main.o dstate.o ../common/state.o \
		../common/upsconf.o ../common/parseconf.o $(LIBDEP) $(STRLCPY)
	$(CC) $(CFLAGS) $(LIBUSB_CFLAGS) -o $@ bcmxcp.o bcmxcp_usb.o nut_usb.o \
		main.o dstate.o ../common/state.o ../common/upsconf.o \
		../common/parseconf.o \
		$(LIBOBJ) $(LIBUSB_LIBS) $(LDFLAGS)

bcmxcp_usb.o:
	$(CC) $(CFLAGS) $(LIBUSB_CFLAGS) -c bcmxcp_usb.c

nut_usb.o:
	$(CC) $(CFLAGS) $(LIBUSB_CFLAGS) -o nut_usb.o -c nut_usb.c


# ==========================================================================
# Special case: mge-shut driver - development version (early beta)

mge-shut: mge-shut.o hidparser.o main.o dstate.o serial.o \
		../common/state.o \
		../common/upsconf.o ../common/parseconf.o $(LIBDEP)
	$(CC) $(CFLAGS) -o mge-shut mge-shut.o hidparser.o main.o \
		dstate.o serial.o ../common/state.o ../common/upsconf.o \
		../common/parseconf.o $(LIBOBJ) $(LDFLAGS)

mge-shut.o:
	$(CC) $(CFLAGS) -c mge-shut.c

hidparser.o:
	$(CC) $(CFLAGS) -c hidparser.c

# ==========================================================================
# Special case: snmp-ups driver - need OpenSSL and NetSNMP includes
# and libraries
# Not built by default.
snmp-ups: snmp-ups.o main.o dstate.o ../common/state.o \
		../common/upsconf.o ../common/parseconf.o $(LIBDEP)
	$(CC) $(CFLAGS) $(NETSNMP_CFLAGS) -o $@ $@.o main.o dstate.o \
		../common/state.o ../common/upsconf.o ../common/parseconf.o \
		$(LIBOBJ) $(LDFLAGS) $(NETSNMP_LIBS)

snmp-ups.o:
	$(CC) $(CFLAGS) $(NETSNMP_CFLAGS) -c snmp-ups.c


# ==========================================================================
# Housekeeping stuff
# 
# gendb runs here so that the source always goes out the door with a
# current Makefile.drvbuild file

depend Makefile.drvbuild:
	./gendb $(PROGS)

clean:
	rm -f *~ *.o $(PROGS)
	rm -f dummycons snmp-ups energizerups newhidups hidups mge-shut upsdrvctl bcmxcp_usb

distclean: clean

# ==========================================================================
# Install handlers

install: all install-@DRIVER_INSTALL_TARGET@
	$(INSTALLCMD) -m $(INSTALLMODE) upsdrvctl $(DRVPATH);

# Install every driver

install-all-drivers:
	@for f in $(PROGS) mge-shut; do \
		echo $(INSTALLCMD) -m $(INSTALLMODE) $$f $(DRVPATH); \
		$(INSTALLCMD) -m $(INSTALLMODE) $$f $(DRVPATH); \
	done

# Just install the drivers that were selected by the user

install-some-drivers:
	@for f in $(DRIVER_BUILD_LIST) ; do \
		echo $(INSTALLCMD) -m $(INSTALLMODE) $$f $(DRVPATH); \
		$(INSTALLCMD) -m $(INSTALLMODE) $$f $(DRVPATH); \
	done

# Just install the snmp drivers

install-snmp:
	@if (test ! -d $(DRVPATH)) then \
		../install-sh -d $(DRVPATH) || exit 1; \
	fi
	@for f in $(SNMP_DRIVER_LIST) ; do \
		echo $(INSTALLCMD) -m $(INSTALLMODE) $$f $(DRVPATH); \
		$(INSTALLCMD) -m $(INSTALLMODE) $$f $(DRVPATH); \
	done

# Just install the usbups drivers (*hidups)

install-usb:
	@if (test ! -d $(DRVPATH)) then \
		../install-sh -d $(DRVPATH) || exit 1; \
	fi
	@for f in $(USB_DRIVER_LIST) ; do \
		echo $(INSTALLCMD) -m $(INSTALLMODE) $$f $(DRVPATH); \
		$(INSTALLCMD) -m $(INSTALLMODE) $$f $(DRVPATH); \
	done
